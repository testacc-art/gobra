# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2011-2020 ETH Zurich.

name: test

on:
  push: # run this workflow on every push
  pull_request: # run this workflow on every pull_request

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    container: gobraverifier/gobra-base:v5_z3_4.8.7
    env:
      SILVER_REF: "v.21.01-release"
      SILICON_REF: "v.21.01-release"
      CARBON_REF: "v.21.01-release"
    steps:
      - name: Checkout Gobra 
        uses: actions/checkout@v2
        with:
          path: gobra

      # clone Viper dependencies
      - name: Checkout Silver  
        uses: actions/checkout@v2
        with:
          repository: viperproject/silver
          ref: ${{ env.SILVER_REF }}
          path: silver
      - name: Checkout Silicon
        uses: actions/checkout@v2
        with:
          repository: viperproject/silicon
          ref: ${{ env.SILICON_REF }}
          path: silicon
      - name: Checkout Carbon
        uses: actions/checkout@v2
        with:
          repository: viperproject/carbon
          ref: ${{ env.CARBON_REF }}
          path: carbon

      - name: Java Version 
        run: java --version
      - name: Z3 Version
        run: z3 -version
      - name: Silver Commit
        run: echo "Silver commit:" $(git -C silver rev-parse HEAD)
      - name: Silicon Commit
        run: echo "Silicon commit:" $(git -C silicon rev-parse HEAD)
      - name: Carbon Commit
        run: echo "Carbon commit:" $(git -C carbon rev-parse HEAD)

      # create symlinks between and to Viper dependencies:
      - name: Create Silicon's sym links
        run: ln --symbolic ../silver
        working-directory: silicon
      - name: Create Carbon's sym links
        run: ln --symbolic ../silver
        working-directory: carbon
      - name: Create Gobra's sym links
        run: ln --symbolic ../silver; ln --symbolic ../silicon; ln --symbolic ../carbon
        working-directory: gobra

      - name: Set sbt cache variables
        run: echo "SBT_OPTS=-Dsbt.global.base=sbt-cache/.sbtboot -Dsbt.boot.directory=sbt-cache/.boot -Dsbt.ivy.home=sbt-cache/.ivy" >> $GITHUB_ENV
        # note that the cache path is relative to the directory in which sbt is invoked.

      - name: check ram
        run: free -m
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            gobra/sbt-cache/.sbtboot
            gobra/sbt-cache/.boot
            gobra/sbt-cache/.ivy/cache
          # <x>/project/target and <x>/target, where <x> is e.g. 'gobra' or 'silicon', are intentionally not
          # included as several occurrences of NoSuchMethodError exceptions have been observed during CI runs. It seems
          # like sbt is unable to correctly compute source files that require a recompilation. Therefore, we have
          # disabled caching of compiled source files altogether
          key: ${{ runner.os }}-sbt-no-precompiled-sources-${{ hashFiles('**/build.sbt') }}
      - name: check ram 
        run: free -m
      - name: increase swap
        run: |
          echo "fallocate"
          sudo fallocate -l 6G /swapfile0
          ls -lh /swapfile0
          sudo chmod 600 /swapfile0
          echo "mkswap"
          sudo mkswap /swapfile0
          sudo swapon /swapfile0
          echo "swapon show"
          sudo swapon --show
          echo "free -h"
          free -h
          echo "df -h"
          df -h
      - name: Execute all tests  
        run: |
          sbt test
        working-directory: gobra
        env:
#           _JAVA_OPTIONS: "-Xmx4g -XX:+UseG1GC"
          SBT_OPTS: "-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=2G -Xmx2G -Xms1G -XX:+UseG1GC"
      - name: check ram
        if: always()
        run: free -m
